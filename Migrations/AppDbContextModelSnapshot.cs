// <auto-generated />
using System;
using Lawyer.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lawyer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CaseCostumerRef", b =>
                {
                    b.Property<int>("Case_Id")
                        .HasColumnType("int");

                    b.Property<int>("Costumer_Id")
                        .HasColumnType("int");

                    b.HasKey("Case_Id", "Costumer_Id");

                    b.HasIndex("Costumer_Id");

                    b.ToTable("CaseCostumerRef");
                });

            modelBuilder.Entity("CaseLawyers", b =>
                {
                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<int>("LawyersId")
                        .HasColumnType("int");

                    b.HasKey("CaseId", "LawyersId");

                    b.HasIndex("LawyersId");

                    b.ToTable("CaseLawyers");
                });

            modelBuilder.Entity("CourtCourtHouse", b =>
                {
                    b.Property<int>("CourtsId")
                        .HasColumnType("int");

                    b.Property<int>("courtHousesId")
                        .HasColumnType("int");

                    b.HasKey("CourtsId", "courtHousesId");

                    b.HasIndex("courtHousesId");

                    b.ToTable("CourtCourtHouse");
                });

            modelBuilder.Entity("CourtJudge", b =>
                {
                    b.Property<int>("CourtId")
                        .HasColumnType("int");

                    b.Property<int>("JudgesId")
                        .HasColumnType("int");

                    b.HasKey("CourtId", "JudgesId");

                    b.HasIndex("JudgesId");

                    b.ToTable("CourtJudge");
                });

            modelBuilder.Entity("Lawyer.DAL.Case", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Case_CourtHouse_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Case_Court_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Case_Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Case_Defendent_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Case_File_Number")
                        .HasColumnType("int");

                    b.Property<string>("Case_PlaintiffsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Case_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JudgeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Case_File_Number")
                        .IsUnique();

                    b.ToTable("Case");
                });

            modelBuilder.Entity("Lawyer.DAL.Costumers", b =>
                {
                    b.Property<int>("Case_Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Case_Number"));

                    b.Property<string>("Case_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costumer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Which_C_House")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Which_Court")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Case_Number");

                    b.ToTable("Costumers");
                });

            modelBuilder.Entity("Lawyer.DAL.Court", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Court_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courts");
                });

            modelBuilder.Entity("Lawyer.DAL.CourtHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourtHouse_Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourtHouse_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CourtsHouse");
                });

            modelBuilder.Entity("Lawyer.DAL.Judge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Judges");
                });

            modelBuilder.Entity("Lawyer.DAL.Lawyers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("B_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("B_place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("H_Phone_Number")
                        .HasColumnType("int");

                    b.Property<int>("Lawyer_D_Number")
                        .HasColumnType("int");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("P_Number")
                        .HasColumnType("int");

                    b.Property<int>("Sgk_No")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lawyers");
                });

            modelBuilder.Entity("Lawyer.DAL.Session", b =>
                {
                    b.Property<int>("Session_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Session_Date"));

                    b.Property<string>("Session_C_Room")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Witness_Id")
                        .HasColumnType("int");

                    b.HasKey("Session_Date");

                    b.HasIndex("Witness_Id");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("Lawyer.DAL.Witness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("W_Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("W_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Witness");
                });

            modelBuilder.Entity("CaseCostumerRef", b =>
                {
                    b.HasOne("Lawyer.DAL.Case", null)
                        .WithMany()
                        .HasForeignKey("Case_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CaseId");

                    b.HasOne("Lawyer.DAL.Costumers", null)
                        .WithMany()
                        .HasForeignKey("Costumer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CostumerId");
                });

            modelBuilder.Entity("CaseLawyers", b =>
                {
                    b.HasOne("Lawyer.DAL.Case", null)
                        .WithMany()
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lawyer.DAL.Lawyers", null)
                        .WithMany()
                        .HasForeignKey("LawyersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourtCourtHouse", b =>
                {
                    b.HasOne("Lawyer.DAL.Court", null)
                        .WithMany()
                        .HasForeignKey("CourtsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lawyer.DAL.CourtHouse", null)
                        .WithMany()
                        .HasForeignKey("courtHousesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourtJudge", b =>
                {
                    b.HasOne("Lawyer.DAL.Court", null)
                        .WithMany()
                        .HasForeignKey("CourtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lawyer.DAL.Judge", null)
                        .WithMany()
                        .HasForeignKey("JudgesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lawyer.DAL.Case", b =>
                {
                    b.HasOne("Lawyer.DAL.Judge", "Judges")
                        .WithOne("Case")
                        .HasForeignKey("Lawyer.DAL.Case", "Case_File_Number")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Judges");
                });

            modelBuilder.Entity("Lawyer.DAL.Session", b =>
                {
                    b.HasOne("Lawyer.DAL.Witness", "Witness")
                        .WithMany("Sessions")
                        .HasForeignKey("Witness_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Witness");
                });

            modelBuilder.Entity("Lawyer.DAL.Judge", b =>
                {
                    b.Navigation("Case")
                        .IsRequired();
                });

            modelBuilder.Entity("Lawyer.DAL.Witness", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
